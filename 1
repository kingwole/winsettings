# Evaluation Code
$appPath = "C:\Program Files (x86)\PASSPORT\Passport.exe"
$regPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers"

try {
    $value = Get-ItemProperty -Path $regPath -Name $appPath -ErrorAction Stop
    if ($value.$appPath -eq "RUNASADMIN") {
        exit 0  # Already set
    } else {
        exit 1  # Needs fix
    }
} catch {
    exit 1  # Key doesn't exist or value not set
}




# Remediation Code
$appPath = "C:\Program Files (x86)\PASSPORT\Passport.exe"
$regPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers"

# Create key if missing
if (-not (Test-Path $regPath)) {
    New-Item -Path $regPath -Force | Out-Null
}

# Set the admin flag
Set-ItemProperty -Path $regPath -Name $appPath -Value "RUNASADMIN"


# Evaluation Code
$appPath = "C:\Program Files (x86)\PASSPORT\Passport.exe"
$regPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers"

$isWin11 = ([System.Environment]::OSVersion.Version.Build -ge 22000)

try {
    $value = Get-ItemProperty -Path $regPath -Name $appPath -ErrorAction Stop
    $isSet = ($value.$appPath -eq "RUNASADMIN")
} catch {
    $isSet = $false
}

if ($isWin11 -and -not $isSet) {
    exit 1  # Needs fix
} else {
    exit 0  # No action needed
}


# Remediation Code
$appPath = "C:\Program Files (x86)\PASSPORT\Passport.exe"
$regPath = "HKLM:\SOFTWARE\Microsoft\Windows NT\CurrentVersion\AppCompatFlags\Layers"

if (-not (Test-Path $regPath)) {
    New-Item -Path $regPath -Force | Out-Null
}

Set-ItemProperty -Path $regPath -Name $appPath -Value "RUNASADMIN"



$taskName = "PassportElevatedLaunch"

$taskExists = schtasks.exe /Query /TN $taskName 2>$null
if ($LASTEXITCODE -eq 0) {
    exit 0  # Task already exists
} else {
    exit 1  # Task needs to be created
}





$taskName = "PassportElevatedLaunch"
$appPath = "C:\Program Files (x86)\PASSPORT\Passport.exe"

# Delete existing task if it exists (to update any changes)
schtasks.exe /Delete /F /TN $taskName 2>$null | Out-Null

# Create the new scheduled task to run as SYSTEM with highest privileges
$action = New-ScheduledTaskAction -Execute $appPath
$trigger = New-ScheduledTaskTrigger -AtLogOn
$principal = New-ScheduledTaskPrincipal -UserId "SYSTEM" -RunLevel Highest

Register-ScheduledTask -TaskName $taskName -Action $action -Trigger $trigger -Principal $principal -Description "Run Passport.exe without UAC prompt" -Force